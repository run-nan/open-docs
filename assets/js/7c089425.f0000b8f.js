"use strict";(self.webpackChunkopen_docs=self.webpackChunkopen_docs||[]).push([[23154],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>u});var n=a(67294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},d=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),m=p(a),u=i,b=m["".concat(s,".").concat(u)]||m[u]||c[u]||r;return a?n.createElement(b,o(o({ref:t},d),{},{components:a})):n.createElement(b,o({ref:t},d))}));function u(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=a.length,o=new Array(r);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var p=2;p<r;p++)o[p]=a[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},28906:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>l,toc:()=>p});var n=a(87462),i=(a(67294),a(3905));const r={id:"database",sidebar_position:2,description:"A database exclusive to plugins."},o="Database",l={unversionedId:"abilities/basic/database",id:"version-1.x/abilities/basic/database",title:"Database",description:"A database exclusive to plugins.",source:"@site/versioned_docs/version-1.x/abilities/basic/database.mdx",sourceDirName:"abilities/basic",slug:"/abilities/basic/database",permalink:"/docs/abilities/basic/database",draft:!1,tags:[],version:"1.x",lastUpdatedBy:"liupengfei",lastUpdatedAt:1690791943,formattedLastUpdatedAt:"Jul 31, 2023",sidebarPosition:2,frontMatter:{id:"database",sidebar_position:2,description:"A database exclusive to plugins."},sidebar:"abilities",previous:{title:"Logger",permalink:"/docs/abilities/basic/openAbility-pluginLog"},next:{title:"Notifications",permalink:"/docs/abilities/basic/notifications"}},s={},p=[{value:"Requirements",id:"requirements",level:2},{value:"Overview",id:"overview",level:2},{value:"Usage",id:"usage",level:2},{value:"Use database ability",id:"use-database-ability",level:3},{value:"Step 1: Installation dependency",id:"step-1-installation-dependency",level:4},{value:"Step 2: Write SQL files",id:"step-2-write-sql-files",level:4},{value:"Step 3: Database initialization",id:"step-3-database-initialization",level:4},{value:"Step 4: Database operation",id:"step-4-database-operation",level:4},{value:"Local development and configuration",id:"local-development-and-configuration",level:3},{value:"Other",id:"other",level:2},{value:"FAQ",id:"faq",level:2}],d={toc:p};function c(e){let{components:t,...a}=e;return(0,i.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"database"},"Database"),(0,i.kt)("h2",{id:"requirements"},"Requirements"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"ONES"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"v3.6.0+")))),(0,i.kt)("h2",{id:"overview"},"Overview"),(0,i.kt)("p",null,"Sometimes plugin want to persist their own data. The database ability allows each plugin to have its own independent database and provides methods to access and manipulate it."),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"This ability is compatible with ",(0,i.kt)("strong",{parentName:"p"},"mysql version 5.7.x")," SQL syntax")),(0,i.kt)("h2",{id:"usage"},"Usage"),(0,i.kt)("h3",{id:"use-database-ability"},"Use database ability"),(0,i.kt)("h4",{id:"step-1-installation-dependency"},"Step 1: Installation dependency"),(0,i.kt)("p",null,"Enter the ",(0,i.kt)("inlineCode",{parentName:"p"},"/backend")," directory of the plugin project, and execute the following command for dependent installation:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"npm i @ones-op/node-database\n")),(0,i.kt)("h4",{id:"step-2-write-sql-files"},"Step 2: Write SQL files"),(0,i.kt)("p",null,"To create a database, you need to write the table creation statements of all tables in the database in advance in the SQL file and put them in the ",(0,i.kt)("inlineCode",{parentName:"p"},"workspace")," directory."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Sample SQL file:")),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"The table name in the statement needs to be enclosed in {{ }}")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sql",metastring:"title=/workspace/plugin.sql",title:"/workspace/plugin.sql"},"CREATE TABLE IF NOT EXISTS `{{email_id_map}}`  (\n    `email` varchar(128) CHARACTER SET latin1 NOT NULL COMMENT 'email',\n    `id_number` varchar(128) CHARACTER SET utf8mb4 DEFAULT NULL COMMENT 'Work number',\n  PRIMARY KEY (`email`)\n) ENGINE = InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_bin;\n")),(0,i.kt)("h4",{id:"step-3-database-initialization"},"Step 3: Database initialization"),(0,i.kt)("p",null,"Call the ",(0,i.kt)("inlineCode",{parentName:"p"},"importSQL")," method to create a database table. It is recommended to initialize the table in the plugin's ",(0,i.kt)("inlineCode",{parentName:"p"},"Install")," method."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="backend/src/index.ts"',title:'"backend/src/index.ts"'},"import { importSQL } from '@ones-op/node-database'\n\n// Lifecycle hook installation plugin\nexport async function Install() {\n  // Initialize the database\n  return importSQL('plugin.sql')\n}\n")),(0,i.kt)("h4",{id:"step-4-database-operation"},"Step 4: Database operation"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"select")),(0,i.kt)("p",{parentName:"li"},"The query data uses the ",(0,i.kt)("inlineCode",{parentName:"p"},"select")," method, which receives the SQL statement and returns the result of the query. If SQL fails in execution, it will ",(0,i.kt)("inlineCode",{parentName:"p"},"throw error"),"."),(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Example"),"\uff1a"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"import { select } from '@ones-op/node-database'\n\ntry {\n  const result = await select('select * from email_id_map limit 10;')\n} catch (error) {\n  Logger.error('ERROR: ', error)\n}\n"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"exec")),(0,i.kt)("p",{parentName:"li"},"The exec method is used to execute the sql statement, which receives the SQL statement and the action type, and does not return a result. If SQL fails in execution, it will ",(0,i.kt)("inlineCode",{parentName:"p"},"throw error"),"."),(0,i.kt)("p",{parentName:"li"},"Currently, the supported execution operations are\uff1a",(0,i.kt)("inlineCode",{parentName:"p"},"insert"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"update"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"delete"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"create"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"alter"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"drop")),(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Example"),"\uff1a"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"import { exec } from '@ones-op/node-database'\n\ntry {\n  await exec('insert', `INSERT INTO email_id_map VALUES (\"plugin@ones.com\", \"001\");`)\n} catch (error) {\n  Logger.error('ERROR: ', error)\n}\n"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"count")),(0,i.kt)("p",{parentName:"li"},"Statistics use the ",(0,i.kt)("inlineCode",{parentName:"p"},"count")," method, which receives the SQL statement and returns the statistical results. If SQL fails in execution, it will ",(0,i.kt)("inlineCode",{parentName:"p"},"throw error"),"."),(0,i.kt)("p",{parentName:"li"},"Only SQL statements that use the ",(0,i.kt)("inlineCode",{parentName:"p"},"count")," method to count the number of individual columns are supported."),(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Example"),"\uff1a"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"import { count } from '@ones-op/node-database'\n\ntry {\n  const c = await count('select count(*) from email_id_map;')\n} catch (error) {\n  Logger.error('ERROR: ', error)\n}\n")))),(0,i.kt)("h3",{id:"local-development-and-configuration"},"Local development and configuration"),(0,i.kt)("p",null,"When developing locally, in order to facilitate development and debugging, it is also supported to allow the database operations to act locally. Local debugging does not affect the use of the ability, does not need to modify the code, only needs to modify the configuration of the local database.Modify the configuration in ",(0,i.kt)("inlineCode",{parentName:"p"},"config/local.yaml"),", and then re-execute the ",(0,i.kt)("inlineCode",{parentName:"p"},"npx op invoke run")," command to restart the plugin"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example"),"\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"\u2003\u2003mysql_in_local: true # 'True' to use your local database, 'false' to use the ONES system built-in database\n\u2003\u2003mysql_user_name: 'root'\n\u2003\u2003mysql_user_password: 'root123'\n\u2003\u2003mysql_database_name: 'test'\n\u2003\u2003mysql_host: '127.0.0.1'\n\u2003\u2003mysql_port: '3306'\n")),(0,i.kt)("h2",{id:"other"},"Other"),(0,i.kt)("p",null,"For the definition of specific parameters, please refer to: ",(0,i.kt)("a",{parentName:"p",href:"/docs/reference/packages/node-database/"},"@ones-op/node-database")),(0,i.kt)("h2",{id:"faq"},"FAQ"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"How does the database migrate when the plugin is upgraded?")),(0,i.kt)("p",null,"When the plugin is upgraded, the upgrade method in the lifecycle method will be called. The team-level plugin is ",(0,i.kt)("inlineCode",{parentName:"p"},"Upgrade"),", and the organization-level plugin is ",(0,i.kt)("inlineCode",{parentName:"p"},"OrgUpgrade"),". The database remains unchanged before and after the plugin is upgraded, and migration can be realized in this method."))}c.isMDXComponent=!0}}]);