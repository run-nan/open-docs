"use strict";(self.webpackChunkopen_docs=self.webpackChunkopen_docs||[]).push([[7555],{17942:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>f});var a=t(50959);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var p=a.createContext({}),l=function(e){var n=a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},c=function(e){var n=l(e.components);return a.createElement(p.Provider,{value:n},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=l(t),u=o,f=d["".concat(p,".").concat(u)]||d[u]||m[u]||i;return t?a.createElement(f,r(r({ref:n},c),{},{components:t})):a.createElement(f,r({ref:n},c))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,r=new Array(i);r[0]=u;var s={};for(var p in n)hasOwnProperty.call(n,p)&&(s[p]=n[p]);s.originalType=e,s[d]="string"==typeof e?e:o,r[1]=s;for(var l=2;l<i;l++)r[l]=t[l];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},12623:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>r,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var a=t(28957),o=(t(50959),t(17942));const i={sidebar_position:5},r="op.config.mjs",s={unversionedId:"reference/config/op.config.mjs",id:"reference/config/op.config.mjs",title:"op.config.mjs",description:"The CLI tool configuration file allows you to customize the behavior of certain commands in the OP-CLI and OPT-CLI by using various configuration options.",source:"@site/docs/reference/config/op.config.mjs.mdx",sourceDirName:"reference/config",slug:"/reference/config/op.config.mjs",permalink:"/open-docs/docs/reference/config/op.config.mjs",draft:!1,tags:[],version:"current",lastUpdatedBy:"liupengfei",lastUpdatedAt:1703495563,formattedLastUpdatedAt:"Dec 25, 2023",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"reference",previous:{title:"upgrade.yaml",permalink:"/open-docs/docs/reference/config/upgrade.yaml"},next:{title:"Notes",permalink:"/open-docs/docs/reference/packages/"}},p={},l=[{value:"onesVersion",id:"onesversion",level:2}],c={toc:l},d="wrapper";function m(e){let{components:n,...t}=e;return(0,o.kt)(d,(0,a.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"opconfigmjs"},"op.config.mjs"),(0,o.kt)("p",null,"The CLI tool configuration file allows you to customize the behavior of certain commands in the ",(0,o.kt)("a",{parentName:"p",href:"/open-docs/docs/tools/cli/op-cli"},"OP-CLI")," and ",(0,o.kt)("a",{parentName:"p",href:"/open-docs/docs/tools/cli/opt-cli"},"OPT-CLI")," by using various configuration options."),(0,o.kt)("p",null,"You need to export a configuration object in ",(0,o.kt)("inlineCode",{parentName:"p"},"op.config.mjs"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="op.config.mjs"',title:'"op.config.mjs"'},"/** @type { import(\"@ones/cli-utils\").OpConfigSchema } */\nexport default {\n  onesVersion: '3.15.0',\n  scan: {\n    apis: ['project/api/version'],\n  },\n}\n")),(0,o.kt)("p",null,"The type definition for the configuration object is as follows:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"interface OpConfigSchema {\n  onesVersion?: string\n  scan?: {\n    roots?: string[]\n    exclude?: Array<string | RegExp>\n    output?: {\n      level?: 'all' | 'matched'\n    }\n    patternFragment?: {\n      pre?: string\n      placeholder?: string\n      post?: string\n    }\n    checkIsPathLikeString?: (value: string) => boolean\n    apis?: string[]\n  }\n}\n")),(0,o.kt)("h2",{id:"onesversion"},"onesVersion"),(0,o.kt)("p",null,"The target ONES system version used for checking unsupported slots and abilities during packaging and scanning."),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"The difference between this field and the ",(0,o.kt)("a",{parentName:"p",href:"/open-docs/docs/reference/config/plugin.yaml#min_system_version"},"service.min_system_version")," field in plugin.yaml is as follows:"),(0,o.kt)("ul",{parentName:"admonition"},(0,o.kt)("li",{parentName:"ul"},"The ",(0,o.kt)("inlineCode",{parentName:"li"},"onesVersion")," field in op.config.mjs needs to be manually assigned by the developer, whereas the ",(0,o.kt)("inlineCode",{parentName:"li"},"service.min_system_version")," field in plugin.yaml is automatically deduced based on the capabilities used within the plugin. Developers do not need to modify the value of this field."),(0,o.kt)("li",{parentName:"ul"},"After specifying the ",(0,o.kt)("inlineCode",{parentName:"li"},"onesVersion")," in op.config.mjs, during the packaging of the OPK file, op-cli will validate whether the plugin uses deprecated capabilities before the target version and whether it uses capabilities that are only available after the target version. During plugin installation, the Open Platform will verify if the current ONES system version is greater than the ",(0,o.kt)("inlineCode",{parentName:"li"},"service.min_system_version")," specified in the plugin's plugin.yaml file.\n:::")),(0,o.kt)("h2",{parentName:"admonition",id:"scan"},"scan"),(0,o.kt)("p",{parentName:"admonition"},"Code scanning configuration used to customize the behavior of the ",(0,o.kt)("a",{parentName:"p",href:"/open-docs/docs/tools/cli/op-cli#scan"},"op scan")," and ",(0,o.kt)("a",{parentName:"p",href:"/open-docs/docs/tools/cli/opt-cli#check"},"opt check")," commands."),(0,o.kt)("h3",{parentName:"admonition",id:"scanroots"},"scan.roots"),(0,o.kt)("p",{parentName:"admonition"},"The root directories to be scanned. The default value is ",(0,o.kt)("inlineCode",{parentName:"p"},'["web","backend"]')," and is only applicable to the ",(0,o.kt)("a",{parentName:"p",href:"/open-docs/docs/tools/cli/op-cli#scan"},"op scan")," command."),(0,o.kt)("h3",{parentName:"admonition",id:"scanexclude"},"scan.exclude"),(0,o.kt)("p",{parentName:"admonition"},"Paths to be excluded from scanning. The default value is ",(0,o.kt)("inlineCode",{parentName:"p"},"[/node_modules/, /dist/]")," and is only applicable to the ",(0,o.kt)("a",{parentName:"p",href:"/open-docs/docs/tools/cli/op-cli#scan"},"op scan")," command."),(0,o.kt)("h3",{parentName:"admonition",id:"scancheckispathlikestring"},"scan.checkIsPathLikeString"),(0,o.kt)("p",{parentName:"admonition"},"A function that determines whether a string literal is a URL. The default value is ",(0,o.kt)("inlineCode",{parentName:"p"},"(value) => value.includes('/') && value !== '/'")," and is only applicable to the ",(0,o.kt)("a",{parentName:"p",href:"/open-docs/docs/tools/cli/op-cli#scan"},"op scan")," command."),(0,o.kt)("h3",{parentName:"admonition",id:"scanoutput"},"scan.output"),(0,o.kt)("p",{parentName:"admonition"},"Configuration for scan result output. Only applicable to the ",(0,o.kt)("a",{parentName:"p",href:"/open-docs/docs/tools/cli/op-cli#scan"},"op scan")," command."),(0,o.kt)("h4",{parentName:"admonition",id:"scanoutputlevel"},"scan.output.level"),(0,o.kt)("p",{parentName:"admonition"},"Output level with the following options:"),(0,o.kt)("ul",{parentName:"admonition"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"all"),": Only output scan results that match APIs."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"matched"),": Output all scan results.")),(0,o.kt)("p",{parentName:"admonition"},"The default value is ",(0,o.kt)("inlineCode",{parentName:"p"},"all"),"."),(0,o.kt)("h3",{parentName:"admonition",id:"scanapis"},"scan.apis"),(0,o.kt)("p",{parentName:"admonition"},"The collection of APIs to match. The default value is ",(0,o.kt)("inlineCode",{parentName:"p"},"[]"),"."),(0,o.kt)("h3",{parentName:"admonition",id:"scanpatternfragment"},"scan.patternFragment"),(0,o.kt)("p",{parentName:"admonition"},"Configuration for URL regular expression fragments used to customize the matching rules."),(0,o.kt)("h4",{parentName:"admonition",id:"scanpatternfragmentpre"},"scan.patternFragment.pre"),(0,o.kt)("p",{parentName:"admonition"},"The prefix regular expression fragment of the URL regular expression. The default value is ",(0,o.kt)("inlineCode",{parentName:"p"},'"(?:[^\\n]*)"'),"."),(0,o.kt)("h4",{parentName:"admonition",id:"scanpatternfragmentplaceholder"},"scan.patternFragment.placeholder"),(0,o.kt)("p",{parentName:"admonition"},"The placeholder regular expression fragment of the URL regular expression. The default value is ",(0,o.kt)("inlineCode",{parentName:"p"},'"(?:[^\\n/]*)"'),"."),(0,o.kt)("h4",{parentName:"admonition",id:"scanpatternfragmentpost"},"scan.patternFragment.post"),(0,o.kt)("p",{parentName:"admonition"},"The postfix regular expression fragment of the URL regular expression. The default value is ",(0,o.kt)("inlineCode",{parentName:"p"},'"(?:[^\\n]*)"'),".")))}m.isMDXComponent=!0}}]);