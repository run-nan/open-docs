"use strict";(self.webpackChunkopen_docs=self.webpackChunkopen_docs||[]).push([[1270],{17942:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>k});var i=n(50959);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,i,o=function(e,t){if(null==e)return{};var n,i,o={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=i.createContext({}),s=function(e){var t=i.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},d=function(e){var t=s(e.components);return i.createElement(l.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},c=i.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),u=s(n),c=o,k=u["".concat(l,".").concat(c)]||u[c]||m[c]||a;return n?i.createElement(k,r(r({ref:t},d),{},{components:n})):i.createElement(k,r({ref:t},d))}));function k(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,r=new Array(a);r[0]=c;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p[u]="string"==typeof e?e:o,r[1]=p;for(var s=2;s<a;s++)r[s]=n[s];return i.createElement.apply(null,r)}return i.createElement.apply(null,n)}c.displayName="MDXCreateElement"},74581:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>m,frontMatter:()=>a,metadata:()=>p,toc:()=>s});var i=n(28957),o=(n(50959),n(17942));const a={sidebar_position:2,description:"Customizing page node type capabilities corresponds to front-end slot introduction."},r="Editor module",p={unversionedId:"abilities/business/wiki/page-type/page-type-module",id:"abilities/business/wiki/page-type/page-type-module",title:"Editor module",description:"Customizing page node type capabilities corresponds to front-end slot introduction.",source:"@site/docs/abilities/business/wiki/page-type/page-type-module.mdx",sourceDirName:"abilities/business/wiki/page-type",slug:"/abilities/business/wiki/page-type/page-type-module",permalink:"/open-docs/docs/abilities/business/wiki/page-type/page-type-module",draft:!1,tags:[],version:"current",lastUpdatedBy:"liupengfei",lastUpdatedAt:1703234094,formattedLastUpdatedAt:"Dec 22, 2023",sidebarPosition:2,frontMatter:{sidebar_position:2,description:"Customizing page node type capabilities corresponds to front-end slot introduction."},sidebar:"abilities",previous:{title:"Editor service",permalink:"/open-docs/docs/abilities/business/wiki/page-type/page-type-service"},next:{title:"DevOps",permalink:"/open-docs/docs/abilities/business/devops/"}},l={},s=[{value:"Slots",id:"slots",level:2},{value:"Available Hook API",id:"available-hook-api",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Supported config options",id:"supported-config-options",level:3},{value:"Example",id:"example",level:3},{value:"Usage",id:"usage",level:2},{value:"Step 1: Add module",id:"step-1-add-module",level:3},{value:"Adding submodules",id:"adding-submodules",level:4},{value:"Step 2: Getting data via Hooks",id:"step-2-getting-data-via-hooks",level:3},{value:"Step 3: Discover Services",id:"step-3-discover-services",level:3},{value:"Step 4: Use WebSocket to realize online editing",id:"step-4-use-websocket-to-realize-online-editing",level:3},{value:"Step 5: Publish the document",id:"step-5-publish-the-document",level:3}],d={toc:s},u="wrapper";function m(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,i.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"editor-module"},"Editor module"),(0,o.kt)("p",null,"The editor module provides the ability to add front-end custom WIKI page node types, after adding ",(0,o.kt)("a",{parentName:"p",href:"/open-docs/docs/abilities/business/wiki/page-type/page-type-service"},"editor-service"),", the plugin can implement the corresponding front-end editor component through this module."),(0,o.kt)("p",null,"The editor module provides several sub-modules by ",(0,o.kt)("strong",{parentName:"p"},"scene"),", as follows:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"edit(required): edit"),(0,o.kt)("li",{parentName:"ul"},"view(required): preview"),(0,o.kt)("li",{parentName:"ul"},"history: page history"),(0,o.kt)("li",{parentName:"ul"},"import(",(0,o.kt)("a",{parentName:"li",href:"../../../../reference/config/plugin.yaml#manual"},"manual"),"): import operation"),(0,o.kt)("li",{parentName:"ul"},"export(",(0,o.kt)("a",{parentName:"li",href:"../../../../reference/config/plugin.yaml#manual"},"manual"),"): export operation"),(0,o.kt)("li",{parentName:"ul"},"operation(",(0,o.kt)("a",{parentName:"li",href:"../../../../reference/config/plugin.yaml#manual"},"manual"),"): customized operation")),(0,o.kt)("h2",{id:"slots"},"Slots"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"ones:wiki:editor:new")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Module path: "),"ONES Wiki / Spaces / page"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Number limit: "),"Declare a maximum of ",(0,o.kt)("strong",{parentName:"p"},"10")," slots in each plugin, and up to ",(0,o.kt)("strong",{parentName:"p"},"10")," slots in the system"),(0,o.kt)("h2",{id:"available-hook-api"},"Available Hook API"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/open-docs/docs/reference/packages/store/#useWikiSpaceInfo"},"useWikiSpaceInfo")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/open-docs/docs/reference/packages/store/#useWikiShareInfo"},"useWikiShareInfo")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/open-docs/docs/reference/packages/store/#useWikiPageInfo"},"useWikiPageInfo")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/open-docs/docs/reference/packages/store/#useWikiTemplateInfo"},"useWikiTemplateInfo")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/open-docs/docs/reference/packages/store/#useCustomEditorInfo"},"useCustomEditorInfo")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/open-docs/docs/reference/packages/store/#useVariablesInfo"},'useVariablesInfo<"ones:wiki:editor:new--import">')," (scene: ",(0,o.kt)("inlineCode",{parentName:"li"},"import")," only)",(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"'ones:wiki:editor:new--import': {\n  /** Imported target page group UUID */\n  importedSpaceUUID: string\n  /** Imported parent page UUID */\n  importedParentPageUUID: string\n}\n")))),(0,o.kt)("h2",{id:"configuration"},"Configuration"),(0,o.kt)("h3",{id:"supported-config-options"},"Supported config options"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("a",{parentName:"p",href:"../../../../reference/config/plugin.yaml#title"},"title"),"(required)"),(0,o.kt)("p",{parentName:"li"},"The page node type name.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("a",{parentName:"p",href:"../../../../reference/config/plugin.yaml#icon"},"icon"),"(required)"),(0,o.kt)("p",{parentName:"li"},"The page node type icon.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"templateThumbnail"),(0,o.kt)("p",{parentName:"li"},"The template thumbnails in the template management page use ONES-supplied thumbnails by default.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("a",{parentName:"p",href:"../../../../reference/config/plugin.yaml#subModule"},"modules"),"(required)")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("a",{parentName:"p",href:"../../../../reference/config/plugin.yaml#title"},"modules","[","*","]",".title")),(0,o.kt)("p",{parentName:"li"},"When type is ",(0,o.kt)("inlineCode",{parentName:"p"},'"export"|"operation"'),", this option is ",(0,o.kt)("strong",{parentName:"p"},"required")," to display the name of the operation button."),(0,o.kt)("p",{parentName:"li"},"This option is ",(0,o.kt)("strong",{parentName:"p"},"required")," to display the name of the import button when the type is ",(0,o.kt)("inlineCode",{parentName:"p"},'"import"')," and there are two or more.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"modules","[*]",".scene(required)"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"type: ",(0,o.kt)("inlineCode",{parentName:"p"},'"edit"|"view"|"history"|"import"|"export"|"operation"')),(0,o.kt)("p",{parentName:"li"},"The type of the current slot (where ",(0,o.kt)("inlineCode",{parentName:"p"},'"edit"|"view"')," submodules are ",(0,o.kt)("strong",{parentName:"p"},"required"),", and ",(0,o.kt)("inlineCode",{parentName:"p"},'"import"|"export"|"operation"')," supports adding more than one).")))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("a",{parentName:"p",href:"../../../../reference/config/plugin.yaml#description"},"modules","[","*","]",".description")),(0,o.kt)("p",{parentName:"li"},"When type is ",(0,o.kt)("inlineCode",{parentName:"p"},'"import"'),", this option is recommended for displaying the description of the import button on the work item association Wiki page.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("a",{parentName:"p",href:"../../../../reference/config/plugin.yaml#icon"},"modules[","*","].icon")),(0,o.kt)("p",{parentName:"li"},"Operation type module (scene: ",(0,o.kt)("inlineCode",{parentName:"p"},'"import"|"export"|"operation"'),"), with support for setting button icons.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("a",{parentName:"p",href:"../../../../reference/config/plugin.yaml#manual"},"modules[","*","].manual")),(0,o.kt)("p",{parentName:"li"},"Operation type module (scene: ",(0,o.kt)("inlineCode",{parentName:"p"},'"import"|"export"|"operation"'),"), this option ",(0,o.kt)("strong",{parentName:"p"},"must be set")," to ",(0,o.kt)("inlineCode",{parentName:"p"},"true"),".")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("a",{parentName:"p",href:"../../../../reference/config/plugin.yaml#manual"},"modules[","*","].preload")),(0,o.kt)("p",{parentName:"li"},"Operation type module (scene: ",(0,o.kt)("inlineCode",{parentName:"p"},'"import"|"export"|"operation"'),"), this option is recommended to be set to ",(0,o.kt)("inlineCode",{parentName:"p"},"true"),"."))),(0,o.kt)("h3",{id:"example"},"Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"modules:\n  - id: ones-wiki-editor-new-f2OA\n    title: ONES Table\n    icon: logo.svg\n    templateThumbnail: template-thumbnail.png\n    moduleType: ones:wiki:editor:new\n    modules:\n      - id: ones-wiki-editor-new-XVKJ\n        title: edit\n        scene: edit\n        enableMemoryRouter: true\n        entry: modules/ones-wiki-editor-new-f2OA/ones-wiki-editor-new-XVKJ/index.html\n      - id: ones-wiki-editor-new-l8bc\n        title: view\n        scene: view\n        enableMemoryRouter: true\n        entry: modules/ones-wiki-editor-new-f2OA/ones-wiki-editor-new-l8bc/index.html\n      - id: ones-wiki-editor-new-qb2c\n        title: history\n        scene: history\n        enableMemoryRouter: true\n        entry: modules/ones-wiki-editor-new-f2OA/ones-wiki-editor-new-qb2c/index.html\n      - id: ones-wiki-editor-new-GnId\n        title: Import\n        scene: import\n        icon: logo.svg\n        enableMemoryRouter: true\n        preload: true\n        manual: true\n        entry: modules/ones-wiki-editor-new-f2OA/ones-wiki-editor-new-GnId/index.html\n      - id: ones-wiki-editor-new-DRUh\n        title: Export\n        scene: export\n        icon: logo.svg\n        enableMemoryRouter: true\n        preload: true\n        manual: true\n        entry: modules/ones-wiki-editor-new-f2OA/ones-wiki-editor-new-DRUh/index.html\n      - id: ones-wiki-editor-new-4FW8\n        title: Custom A\n        scene: operation\n        enableMemoryRouter: true\n        preload: true\n        manual: true\n        entry: modules/ones-wiki-editor-new-f2OA/ones-wiki-editor-new-4FW8/index.html\n      - id: ones-wiki-editor-new-gZ_W\n        title: Custom B\n        scene: operation\n        enableMemoryRouter: true\n        preload: true\n        manual: true\n        entry: modules/ones-wiki-editor-new-f2OA/ones-wiki-editor-new-gZ_W/index.html\n")),(0,o.kt)("h2",{id:"usage"},"Usage"),(0,o.kt)("h3",{id:"step-1-add-module"},"Step 1: Add module"),(0,o.kt)("p",null,"In the plugin root directory, execute ",(0,o.kt)("inlineCode",{parentName:"p"},"npx op add module")," to search and add a module (",(0,o.kt)("inlineCode",{parentName:"p"},"ones:wiki:editor:new"),")."),(0,o.kt)("h4",{id:"adding-submodules"},"Adding submodules"),(0,o.kt)("p",null,"In the plugin root directory, execute ",(0,o.kt)("inlineCode",{parentName:"p"},"npx op add sub-module"),", search and select the parent module ID generated in the previous step, and add the corresponding scene sub-module, which will be continued in the following example with the more complex scene: edit."),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("ul",{parentName:"admonition"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"edit"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"view")," are required submodules.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"import"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"export"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"operation")," are manual trigger modules, you need to add ",(0,o.kt)("inlineCode",{parentName:"p"},"manual: true")," when configuring them.")))),(0,o.kt)("h3",{id:"step-2-getting-data-via-hooks"},"Step 2: Getting data via Hooks"),(0,o.kt)("p",null,"Install the ",(0,o.kt)("inlineCode",{parentName:"p"},"@ones-op/store")," package in the ",(0,o.kt)("inlineCode",{parentName:"p"},"/web")," directory, from which you can get the context information delivered by ONES."),(0,o.kt)("p",null,"You can use ",(0,o.kt)("inlineCode",{parentName:"p"},"useCustomEditorInfo")," to get the current context of the editor (current page location, demo mode or not, publish method, cancel method), and then combine it with ",(0,o.kt)("inlineCode",{parentName:"p"},"useWikiSpaceInfo"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"useWikiPageInfo"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"useTemplateInfo"),", etc. to get the current page information. hooks to get information about the current page."),(0,o.kt)("h3",{id:"step-3-discover-services"},"Step 3: Discover Services"),(0,o.kt)("p",null,"The platform provides a discovery service interface, according to which the plugin can query the access address of the editor service."),(0,o.kt)("p",null,"After installing the ",(0,o.kt)("inlineCode",{parentName:"p"},"@ones-op/fetch")," package in the ",(0,o.kt)("inlineCode",{parentName:"p"},"/web")," directory, you can use the ",(0,o.kt)("inlineCode",{parentName:"p"},"OPFetch")," method to request the discovery service interface."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"interface WebServiceInfo {\n  data: {\n    app_id: string\n    root_route: string\n    http_url: string\n    ws_url: string\n  }[]\n}\n\nfunction fetchServiceInfo(appID: string) {\n  return OPFetch<WebServiceInfo>('api/project/plugin/web_service/info', {\n    // Override OPFetch's Ones-Plugin-Id plugin preset to make it request the Open Platform service\n    headers: { 'Ones-Plugin-Id': 'built_in_apis' },\n    method: 'post',\n    data: { app_id: appID },\n  })\n}\n\nfunction Editor() {\n  const { appID } = usePluginInfo()\n  const [wsBaseUrl, setWsBaseUrl] = useState()\n  useEffect(() => {\n    if (appID) {\n      fetchServiceInfo(appID).then((response) => {\n        setWsBaseUrl(response.data.data[0].ws_url)\n      })\n    }\n  }, [appID])\n\n  // ...\n}\n")),(0,o.kt)("h3",{id:"step-4-use-websocket-to-realize-online-editing"},"Step 4: Use WebSocket to realize online editing"),(0,o.kt)("p",null,"After getting the WebSocket base URL, the plugin can connect according to the editor service business logic to realize online collaborative editing."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"// ...\n\nfunction Editor() {\n  const { appID } = usePluginInfo()\n  const [wsBaseUrl, setWsBaseUrl] = useState()\n  const [ws, setWs] = useState()\n\n  useEffect(() => {\n    if (appID) {\n      fetchServiceInfo(appID).then((response) => {\n        setWsBaseUrl(response.data.data[0].ws_url)\n      })\n    }\n  }, [appID])\n\n  useEffect(() => {\n    if (wsBaseUrl) {\n      const ws = new WebSocket(`${wsBaseUrl}/my-path`)\n      ws.addEventListener('open', handleOpen)\n      ws.addEventListener('message', handleMessage)\n      ws.addEventListener('error', handleError)\n      ws.addEventListener('close', handleClose)\n      setWs(ws)\n    }\n  }, [wsBaseUrl])\n\n  // ...\n}\n")),(0,o.kt)("h3",{id:"step-5-publish-the-document"},"Step 5: Publish the document"),(0,o.kt)("p",null,"Use ",(0,o.kt)("inlineCode",{parentName:"p"},"useCustomEditorInfo")," to get the publish and cancel methods, which will automatically call the corresponding interfaces according to the current scenario to complete the publishing (e.g., in the case of a template scenario, the template will be published instead of the page)."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"function Editor() {\n  // ...\n  const { cancel, publish } = useCustomEditorInfo()\n\n  return (\n    // ...\n    <Button onClick={cancel}>Cancel</Button>\n    <Button onClick={publish}>Publish</Button>\n    // ...\n  )\n}\n")))}m.isMDXComponent=!0}}]);