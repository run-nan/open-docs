"use strict";(self.webpackChunkopen_docs=self.webpackChunkopen_docs||[]).push([[5260],{17942:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>g});var a=n(50959);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var d=a.createContext({}),o=function(e){var t=a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=o(e.components);return a.createElement(d.Provider,{value:t},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,d=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),m=o(n),u=r,g=m["".concat(d,".").concat(u)]||m[u]||c[u]||i;return n?a.createElement(g,l(l({ref:t},s),{},{components:n})):a.createElement(g,l({ref:t},s))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=u;var p={};for(var d in t)hasOwnProperty.call(t,d)&&(p[d]=t[d]);p.originalType=e,p[m]="string"==typeof e?e:r,l[1]=p;for(var o=2;o<i;o++)l[o]=n[o];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},63867:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>c,frontMatter:()=>i,metadata:()=>p,toc:()=>o});var a=n(28957),r=(n(50959),n(17942));const i={sidebar_position:1,description:"Introduction to the Implementation of Editing Service for Custom Page\u3002"},l="Editor service",p={unversionedId:"abilities/business/wiki/page-type/page-type-service",id:"abilities/business/wiki/page-type/page-type-service",title:"Editor service",description:"Introduction to the Implementation of Editing Service for Custom Page\u3002",source:"@site/docs/abilities/business/wiki/page-type/page-type-service.mdx",sourceDirName:"abilities/business/wiki/page-type",slug:"/abilities/business/wiki/page-type/page-type-service",permalink:"/open-docs/docs/abilities/business/wiki/page-type/page-type-service",draft:!1,tags:[],version:"current",lastUpdatedBy:"liupengfei",lastUpdatedAt:1703495563,formattedLastUpdatedAt:"Dec 25, 2023",sidebarPosition:1,frontMatter:{sidebar_position:1,description:"Introduction to the Implementation of Editing Service for Custom Page\u3002"},sidebar:"abilities",previous:{title:"Page node type",permalink:"/open-docs/docs/abilities/business/wiki/page-type/"},next:{title:"Editor module",permalink:"/open-docs/docs/abilities/business/wiki/page-type/page-type-module"}},d={},o=[{value:"Independent application development",id:"independent-application-development",level:2},{value:"Step 1: Write independent application management scripts",id:"step-1-write-independent-application-management-scripts",level:3},{value:"Step 2: Develop the independent program",id:"step-2-develop-the-independent-program",level:3},{value:"Step 3: Implement independent service related interfaces according to the Editor Server specification",id:"step-3-implement-independent-service-related-interfaces-according-to-the-editor-server-specification",level:3},{value:"Step 4: Compile into an executable file and verify the compatibility of the executable file",id:"step-4-compile-into-an-executable-file-and-verify-the-compatibility-of-the-executable-file",level:3},{value:"Add Editor Module",id:"add-editor-module",level:2},{value:"Get URL address for independent services",id:"get-url-address-for-independent-services",level:3},{value:"URL",id:"url",level:4},{value:"HTTP Method",id:"http-method",level:4},{value:"Need Login",id:"need-login",level:4},{value:"Value passing",id:"value-passing",level:4},{value:"parameters",id:"parameters",level:4},{value:"Return parameter",id:"return-parameter",level:4},{value:"Request Example",id:"request-example",level:4},{value:"Return Example",id:"return-example",level:4},{value:"Add independent application abilities",id:"add-independent-application-abilities",level:2}],s={toc:o},m="wrapper";function c(e){let{components:t,...n}=e;return(0,r.kt)(m,(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"editor-service"},"Editor service"),(0,r.kt)("p",null,"The development of the editor service for the WIKI access new page node type plug-in is divided into tree steps"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Independent application development"),(0,r.kt)("li",{parentName:"ul"},"Add Editor Module"),(0,r.kt)("li",{parentName:"ul"},"Add independent application abilities")),(0,r.kt)("h2",{id:"independent-application-development"},"Independent application development"),(0,r.kt)("h3",{id:"step-1-write-independent-application-management-scripts"},"Step 1: Write independent application management scripts"),(0,r.kt)("p",null,"For example, name of the standalone application executable program is:",(0,r.kt)("inlineCode",{parentName:"p"},"GrapeCityServer")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="workspace/start.sh"',title:'"workspace/start.sh"'},'#!/bin/bash\nusage() {\n    echo -e "Usage: $(basename $0) [options]"\n    echo -e " start "\n\n    exit 1\n}\n# Processing startup services\nstart() {\n    echo "/usr/bin/nohup ./GrapeCityServer --port=$PARAMS_PORT --args=$ARGS >/dev/null 2>&1 &"\n    /usr/bin/nohup ./GrapeCityServer --port=$PARAMS_PORT --args=$ARGS > nohup.out 2>&1 &\n}\n# Process Stop Service\nstop() {\n  # The pid.txt here must be consistent with the internal service\n  echo "kill -9 $(cat pid.txt)"\n  kill -9 "$(cat pid.txt)"\n}\nparse_config() {\n    for arg in ${ARGS}\n    do\n        case ${arg} in\n            --port=*)\n                PARAMS_PORT=${arg#*=}\n                ;;\n            --path=*)\n                PATH=${arg#*=}\n                ;;\n            --args=*)\n                ARGS=${arg#*=}\n                ;;\n        esac\n    done\n}\nARGS="$@"\n# This is the entrance\nparse_config\ncase $1 in\nhelp) usage;;\nstart) start;;\nstop) stop;;\n*) usage;;\nesac\n')),(0,r.kt)("h3",{id:"step-2-develop-the-independent-program"},"Step 2: Develop the independent program"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'//Goland\npackage main\n\nvar (\n    port int\n    args string\n)\n\nfunc initFlags() {\n    flag.IntVar(&port, "port", 18000, "service port")\n    flag.StringVar(&args, "args", "", "service other parameters")\n    flag.Parse()\n    parse_other_args()\n}\n\nfunc parse_other_args() {\n    //Parse the args string according to the specifications\n}\n\n//Save independent application\'s process PID\nfunc savePid() {\n    pid := os.Getpid()\n    log.Infof("process PID: %d \\n", pid)\n\n    err := os.WriteFile("./pid.txt", []byte(strconv.Itoa(pid)), 0644)\n    if err != nil {\n        log.Fatalf("Logging PID failed: %+v", err)\n    }\n}\n\nfunc main() {\n    //Parsing parameters\n    initFlags()\n        savePid()\n\n    //...\n    //start web service\n    addr := fmt.Sprintf("%s:%d", "localhost", port)\n\n    //The function can be seen in step 3\n    // router.Run\n\n    err := router.Run(addr)\n    if err != nil {\n        log.Fatal("start service fail")\n    }\n}\n')),(0,r.kt)("h3",{id:"step-3-implement-independent-service-related-interfaces-according-to-the-editor-server-specification"},"Step 3: Implement independent service related interfaces according to the Editor Server specification"),(0,r.kt)("p",null,"Custom Editor Server services need to support http and websocket methods, mainly including:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'//Goland\npackage router\n\nfunc Run(addr string) error {\n    gin.SetMode(gin.ReleaseMode)\n    app := gin.New()\n\n    //http request\n    app.POST("/tokens", controllers.GetToken)\n\n    //websocket request\n    app.GET("/edit", controllers.Edit)\n\n    return app.Run(addr)\n}\n')),(0,r.kt)("h3",{id:"step-4-compile-into-an-executable-file-and-verify-the-compatibility-of-the-executable-file"},"Step 4: Compile into an executable file and verify the compatibility of the executable file"),(0,r.kt)("h2",{id:"add-editor-module"},"Add Editor Module"),(0,r.kt)("p",null,"To develop a slot, it may be necessary to obtain a standalone application (Editor Server) URL address. The following provides a detailed interface for obtaining independent service address information"),(0,r.kt)("h3",{id:"get-url-address-for-independent-services"},"Get URL address for independent services"),(0,r.kt)("p",null,"According to the app_id of the plugin, We can obtain independent service address information."),(0,r.kt)("h4",{id:"url"},"URL"),(0,r.kt)("p",null,"https://{your-host-name}/project/api/project/plugin/web_service/info"),(0,r.kt)("h4",{id:"http-method"},"HTTP Method"),(0,r.kt)("p",null,"POST"),(0,r.kt)("h4",{id:"need-login"},"Need Login"),(0,r.kt)("p",null,"yes"),(0,r.kt)("h4",{id:"value-passing"},"Value passing"),(0,r.kt)("p",null,"JSON"),(0,r.kt)("h4",{id:"parameters"},"parameters"),(0,r.kt)("p",null,"Header"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"require"),(0,r.kt)("th",{parentName:"tr",align:"left"},"value type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"example"),(0,r.kt)("th",{parentName:"tr",align:"left"},"illustrate"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Content-Type"),(0,r.kt)("td",{parentName:"tr",align:"left"},"T"),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"application/json"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Data in JSON format")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Ones-Check-Point"),(0,r.kt)("td",{parentName:"tr",align:"left"},"T"),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"team"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Fixed value")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Ones-Plugin-Id"),(0,r.kt)("td",{parentName:"tr",align:"left"},"T"),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"built_in_apis"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Fixed value")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Ones-Check-Id"),(0,r.kt)("td",{parentName:"tr",align:"left"},"T"),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ATVswGgy"),(0,r.kt)("td",{parentName:"tr",align:"left"},"team_uuid, used for verification")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Ones-User-Id"),(0,r.kt)("td",{parentName:"tr",align:"left"},"T"),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"4qumKXgM"),(0,r.kt)("td",{parentName:"tr",align:"left"},"user_uuid, used for verification")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Origin"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F"),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"https://xxxx.com"},"https://xxxx.com")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Base address of ONES")))),(0,r.kt)("p",null,"Body"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"require"),(0,r.kt)("th",{parentName:"tr",align:"left"},"value type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"example"),(0,r.kt)("th",{parentName:"tr",align:"left"},"illustrate"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"app_id"),(0,r.kt)("td",{parentName:"tr",align:"left"},"T"),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},'"Xy4-EYjw"'),(0,r.kt)("td",{parentName:"tr",align:"left"},"The app_id information of the plugin.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"base_url"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F"),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"https://xxxx.com"},"https://xxxx.com")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Base address of ONES. This field is used first. If it is empty, the Origin field in the Header will be used.")))),(0,r.kt)("h4",{id:"return-parameter"},"Return parameter"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"value type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"example"),(0,r.kt)("th",{parentName:"tr",align:"left"},"illustrate"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"data"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[]object"),(0,r.kt)("td",{parentName:"tr",align:"left"},"See data object"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Return data array data")))),(0,r.kt)("p",null,"data object"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"value type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"example"),(0,r.kt)("th",{parentName:"tr",align:"left"},"illustrate"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"app_id"),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Xy4-EYjw"),(0,r.kt)("td",{parentName:"tr",align:"left"},"app_id of the plugin")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"root_route"),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"/node_demo"),(0,r.kt)("td",{parentName:"tr",align:"left"},"independent services and routing information")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"http_url"),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"https://xxx.com/node_demo"},"https://xxx.com/node_demo")),(0,r.kt)("td",{parentName:"tr",align:"left"},"independent service http address")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"ws_url"),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"wss://xxx.com/node_demo"),(0,r.kt)("td",{parentName:"tr",align:"left"},"independent service websocket address")))),(0,r.kt)("h4",{id:"request-example"},"Request Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-curl"},"curl --location --request POST 'https://xxx.com/project/api/project/plugin/web_service/info' \\\n--header 'Ones-Check-Id: ATVswGgy' \\\n--header 'Ones-Check-Point: team' \\\n--header 'Ones-Plugin-Id: built_in_apis' \\\n--header 'Ones-User-Id: 4qumKXgM' \\\n--header 'Content-Type: application/json' \\\n--header 'Origin: https://xxx.com/' \\\n--data-raw '{\n    \"base_url\": \"https://xxx.com/\",\n    \"app_id\": \"VGh6Y6N\"\n}'\n\n")),(0,r.kt)("h4",{id:"return-example"},"Return Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": [\n    {\n      "app_id": "VGh6Y6N",\n      "root_route": "/hello",\n      "http_url": "https://xxx.com/plugin_service/hello",\n      "ws_url": "wss://xxx.com/api/plugin_service_ws/hello"\n    }\n  ]\n}\n')),(0,r.kt)("h2",{id:"add-independent-application-abilities"},"Add independent application abilities"),(0,r.kt)("p",null,"The configuration is as follows: it can be modified as needed."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="config/plugin.yaml"',title:'"config/plugin.yaml"'},"abilities:\n  - id: xxxxxxxx\n    name: xxxxxxx_GrapeCityServer\n    abilityType: web_service\n    version: 1.0.0\n    config:\n      - fieldType: Input\n        key: root_route\n        show: false\n        value: /GrapeCityServer\n      - fieldType: Input\n        key: args\n        show: true\n        value: ''\n      - fieldType: Input\n        key: start_file\n        show: false\n        value: start.sh\n      - fieldType: Switch\n        key: is_open\n        show: false\n        value: true\n")))}c.isMDXComponent=!0}}]);