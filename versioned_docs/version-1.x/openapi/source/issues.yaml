openapi: 3.0.1
info:
  title: Issue
  version: '1.0'
  description: |
    This resource represents issues. Use it to get, create, update, and delete issues.
servers:
  - url: https://your-domain/rest/api/v1
  - url: http://your-domain/rest/api/v1
paths:
  /project/team/{teamID}/issues:
    get:
      summary: Get a list of issues
      operationId: get-a-list-of-issues
      description: Get a list of issues.
      security:
        - oauth2:
            - read:project:issue
      parameters:
        - name: teamID
          in: path
          description: The team ID.
          required: true
          schema:
            type: string
        - name: limit
          in: query
          description: The number of test case libraries returned by this request.
          schema:
            type: integer
        - name: cursor
          in: query
          description: The starting location of this request.
          schema:
            type: string
        - name: projectID
          in: query
          description: As a filter condition, the list only returns work items that are projectID, used in conjunction with issueTypeID.
          schema:
            type: string
        - name: issueTypeID
          in: query
          description: As a filter condition, the list only returns work items that are issueTypeID, used in conjunction with projectID.
          schema:
            type: string
      responses:
        200:
          description: Request is successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSuccessResponse'
        401:
          description: Returned if the authentication credentials are incorrect or missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadResponse'
        403:
          description: Returns if the scope check fails.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadResponse'
        404:
          description: Returned if the resource object was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadResponse'
        500:
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadResponse'
    post:
      summary: Create a new issue
      operationId: create-a-new-issue
      description: Create a new issue.
      security:
        - oauth2:
            - write:project:issue
      parameters:
        - name: teamID
          in: path
          description: The team ID
          required: true
          schema:
            type: string
      requestBody:
        description: The issue information to be created.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddIssueRequest'
        required: true
      responses:
        200:
          description: Request is successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddOrUpdateSuccessResponse'
        401:
          description: Returned if the authentication credentials are incorrect or missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadResponse'
        403:
          description: Returns if the scope check fails.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadResponse'
        404:
          description: Returned if the resource object was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadResponse'
        500:
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadResponse'
      x-codegen-request-body-name: body
  /project/team/{teamID}/issues/{issueID}:
    get:
      summary: Get a issue details
      operationId: get-a-issue-details
      description: Get a issue details.
      security:
        - oauth2:
            - read:project:issue
      parameters:
        - name: teamID
          in: path
          description: The team ID.
          required: true
          schema:
            type: string
        - name: issueID
          in: path
          description: The id of the issue.
          required: true
          schema:
            type: string
      responses:
        200:
          description: Request is successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListItem'
        401:
          description: Returned if the authentication credentials are incorrect or missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadResponse'
        403:
          description: Returns if the scope check fails.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadResponse'
        404:
          description: Returned if the resource object was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadResponse'
        500:
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadResponse'
    put:
      summary: Update a  issue
      operationId: update-a-issue
      description: Update a issue.
      security:
        - oauth2:
            - write:project:issue
      parameters:
        - name: teamID
          in: path
          description: The team ID.
          required: true
          schema:
            type: string
        - name: issueID
          in: path
          description: The id of the issue.
          required: true
          schema:
            type: string
      requestBody:
        description: Issue information to update.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateIssueRequest'
        required: true
      responses:
        200:
          description: Request is successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddOrUpdateSuccessResponse'
        401:
          description: Returned if the authentication credentials are incorrect or missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadResponse'
        403:
          description: Returns if the scope check fails.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadResponse'
        404:
          description: Returned if the resource object was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadResponse'
        500:
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadResponse'
      x-codegen-request-body-name: body
    delete:
      summary: Delete a issue
      operationId: delete-a-issue
      description: Delete a issue.
      security:
        - oauth2:
            - write:project:issue
      parameters:
        - name: teamID
          in: path
          description: The team ID.
          required: true
          schema:
            type: string
        - name: issueID
          in: path
          description: The id of the issue.
          required: true
          schema:
            type: string
      responses:
        200:
          description: Request is successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSuccessResponse'
        401:
          description: Returned if the authentication credentials are incorrect or missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadResponse'
        403:
          description: Returns if the scope check fails.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadResponse'
        404:
          description: Returned if the resource object was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadResponse'
        500:
          description: Internal Server Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadResponse'
components:
  schemas:
    AddIssueRequest:
      required:
        - assignee
        - fieldValues
        - issueTypeID
        - projectID
        - title
        - watchers
      type: object
      properties:
        assignee:
          maxLength: 8
          minLength: 1
          type: string
          description: Issue assignee.
        title:
          maxLength: 1024
          minLength: 1
          type: string
          description: Issue title.
        projectID:
          maxLength: 16
          minLength: 1
          type: string
          description: Project of the issue.
        issueTypeID:
          maxLength: 8
          minLength: 1
          type: string
          description: Type of the issue.
        fieldValues:
          type: array
          description: Issue Property Information.
          items:
            $ref: '#/components/schemas/FieldValues'
        watchers:
          type: array
          description: When the issue information changes, watchers will be notified by email, etc.
          items:
            maxLength: 8
            minLength: 1
            type: string
        parentID:
          maxLength: 16
          minLength: 1
          type: string
          description: Parent issue ID.
    UpdateIssueRequest:
      type: object
      properties:
        assignee:
          maxLength: 8
          minLength: 1
          type: string
          description: Issue assignee.
        title:
          maxLength: 1024
          minLength: 1
          type: string
          description: Issue title.
        fieldValues:
          type: array
          description: Issue Property Information.
          items:
            $ref: '#/components/schemas/FieldValues'
    FieldValues:
      required:
        - fieldID
        - type
        - value
      type: object
      properties:
        fieldID:
          description: ID of the field.
          minLength: 8
          type: string
        type:
          minimum: 1
          type: integer
          description: Type of the field.
        value:
          type: object
          properties: {}
          description: Value of the field.
    DeleteSuccessResponse:
      type: object
      properties:
        result:
          type: string
          description: The result of this request.
    AddOrUpdateSuccessResponse:
      type: object
      properties:
        result:
          type: string
          description: The result of this request.
        data:
          type: object
          properties:
            id:
              type: string
              description: ID of the issue.
            number:
              type: integer
              description: Number of the issue.
            title:
              type: string
              description: Title of the issue.
            projectID:
              type: string
              description: Project of the issue.
            issueTypeID:
              type: string
              description: Type of the issue.
            parentID:
              type: string
              description: Parent issue ID.
    ListItem:
      type: object
      properties:
        assignee:
          type: object
          properties:
            id:
              type: string
              description: ID of the assignee.
            name:
              type: string
              description: Name of the assignee.
        createTime:
          type: integer
          description: CreateTime of the issue.
        dueDate:
          type: string
          description: Issue due date.
        timeEstimatedHour:
          type: integer
          description: Time estimated,unit is hour.
        issueType:
          type: object
          properties:
            id:
              type: string
              description: ID of the issue type.
            name:
              type: string
              description: Name of the issue type.
        title:
          type: string
          description: Title of the issue.
        number:
          type: integer
          description: Number of the issue.
        creator:
          type: object
          properties:
            id:
              type: string
              description: ID of the creator.
            name:
              type: string
              description: Name of the creator.
        parent:
          type: object
          properties:
            id:
              type: string
              description: Parent issue ID.
            title:
              type: string
              description: Parent issue title.
        priority:
          type: object
          properties:
            id:
              type: string
              description: ID of the priority.
            name:
              type: string
              description: Name of the priority.
        project:
          type: object
          properties:
            id:
              type: string
              description: Project ID of the issue.
            name:
              type: string
              description: Project name of the issue.
        timeRemainingHour:
          type: integer
          description: Time remaining,unit is hour.
        sprint:
          type: object
          properties:
            id:
              type: string
              description: ID of the sprint.
            name:
              type: string
              description: Name of the sprint.
        status:
          type: object
          properties:
            id:
              type: string
              description: ID of the status.
            name:
              type: string
              description: Name of the status.
            category:
              type: string
              description: Category of the status.
        subIssueType:
          type: object
          properties:
            id:
              type: string
              description: ID of the sub issue type.
            name:
              type: string
              description: Name of the sub issue type.
        subIssueCount:
          type: integer
          description: Total sub issue.
        subIssueDoneCount:
          type: integer
          description: Total completed sub issue.
        subIssues:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                description: ID of the sub issue.
              name:
                type: string
                description: Name of the sub issue.
        totalTimeEstimatedHour:
          type: integer
          description: Total time estimated,unit is hour.
        timeSpentHour:
          type: integer
          description: Time spent,unit is hour.
        totalTimeRemainingHour:
          type: integer
          description: Total time remaining,unit is hour.
        id:
          type: string
          description: ID of the issue.
        attachments:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                description: ID of the attachment.
              name:
                type: string
                description: Name of the attachment.
              createTime:
                type: integer
                description: Create time of the attachment.
    PageInfo:
      type: object
      properties:
        count:
          type: integer
          description: The number returned this time.
        endCursor:
          type: string
          description: The last cursor on this page is generally used to turn pages.
        endPos:
          type: integer
          description: The last position on this page.
        hasNextPage:
          type: boolean
          description: Is there a next page.
        startCursor:
          type: string
          description: The first cursor on this page is generally used to turn pages.
        startPos:
          type: integer
          description: The first position on this page.
        totalCount:
          type: integer
          description: The total number of items available in the entire collection,
            including those that are  returned in the current response.
    ListSuccessResponse:
      type: object
      properties:
        result:
          type: string
          description: The result of this request.
        data:
          type: object
          properties:
            list:
              type: array
              items:
                $ref: '#/components/schemas/ListItem'
            pageInfo:
              $ref: '#/components/schemas/PageInfo'
    BadResponse:
      type: object
      properties:
        result:
          type: string
          description: The result of this request.
        errorCode:
          type: string
          description: The error code of this request.
        errorMsg:
          type: string
          description: Error message for this request.
  securitySchemes:
    oauth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://ones.com/oauth2/authorize
          tokenUrl: https://ones.com/oauth2/token
          scopes:
            write:project:issue: Add, edit, delete issue
            read:project:issue: Access issue information
