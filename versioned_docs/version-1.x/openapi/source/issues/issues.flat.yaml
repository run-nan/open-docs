openapi: 3.0.1
info:
  title: Issues
  version: '1.0'
  description: |
    This resource represents issues. Use it to get, create, update, and delete issues.
servers:
  - url: https://your-domain/openapi/v1
  - url: http://your-domain/openapi/v1
paths:
  /project/issues:
    get:
      summary: Get a list of issues
      operationId: 01-get-a-list-of-issues
      description: Get a list of issues.
      security:
        - oauth2:
            - read:project:issue
      parameters:
        - $ref: ../../../../../openapi-common/canary/en/request-team.yaml
        - $ref: ../../../../../openapi-common/canary/en/paging-query-request-limit.yaml
        - $ref: ../../../../../openapi-common/canary/en/paging-query-request-cursor.yaml
        - name: projectID
          in: query
          description: As a filter condition, the list only returns work items that are projectID, used in conjunction with issueTypeID.
          schema:
            type: string
        - name: issueTypeID
          in: query
          description: As a filter condition, the list only returns work items that are issueTypeID, used in conjunction with projectID.
          schema:
            type: string
      responses:
        200:
          description: Request is successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSuccessResponse'
        $ref: ../../../../../openapi-common/canary/en/no-200-response.yaml
    post:
      summary: Create a new issue
      operationId: 02-create-a-new-issue
      description: Create a new issue.
      security:
        - oauth2:
            - write:project:issue
      parameters:
        - $ref: ../../../../../openapi-common/canary/en/request-team.yaml
      requestBody:
        description: The issue information to be created.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddIssueRequest'
        required: true
      responses:
        200:
          description: Request is successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddSuccessResponse'
        $ref: ../../../../../openapi-common/canary/en/no-200-response.yaml
      x-codegen-request-body-name: body
  /project/issues/{issueID}:
    get:
      summary: Get a issue details
      operationId: 03-get-a-issue-details
      description: Get a issue details.
      security:
        - oauth2:
            - read:project:issue
      parameters:
        - $ref: ../../../../../openapi-common/canary/en/request-team.yaml
        - name: issueID
          in: path
          description: The id of the issue.
          required: true
          schema:
            type: string
      responses:
        200:
          description: Request is successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListItem'
        $ref: ../../../../../openapi-common/canary/en/no-200-response.yaml
    put:
      summary: Update a issue
      operationId: 04-update-a-issue
      description: Update a issue.
      security:
        - oauth2:
            - write:project:issue
      parameters:
        - $ref: ../../../../../openapi-common/canary/en/request-team.yaml
        - name: issueID
          in: path
          description: The id of the issue.
          required: true
          schema:
            type: string
      requestBody:
        description: Issue information to update.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateIssueRequest'
        required: true
      responses:
        200:
          description: Request is successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateSuccessResponse'
        $ref: ../../../../../openapi-common/canary/en/no-200-response.yaml
      x-codegen-request-body-name: body
    delete:
      summary: Delete a issue
      operationId: 05-delete-a-issue
      description: Delete a issue.
      security:
        - oauth2:
            - write:project:issue
      parameters:
        - $ref: ../../../../../openapi-common/canary/en/request-team.yaml
        - name: issueID
          in: path
          description: The id of the issue.
          required: true
          schema:
            type: string
      responses:
        200:
          description: Request is successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSuccessResponse'
        $ref: ../../../../../openapi-common/canary/en/no-200-response.yaml
components:
  schemas:
    AddIssueRequest:
      required:
        - assignee
        - fieldValues
        - issueTypeID
        - projectID
        - title
        - watchers
      type: object
      properties:
        assignee:
          maxLength: 8
          minLength: 1
          type: string
          description: Issue assignee.
        title:
          maxLength: 1024
          minLength: 1
          type: string
          description: Issue title.
        projectID:
          maxLength: 16
          minLength: 1
          type: string
          description: Project of the issue.
        issueTypeID:
          maxLength: 8
          minLength: 1
          type: string
          description: Type of the issue.
        fieldValues:
          type: array
          description: Issue Property Information.
          items:
            $ref: '#/components/schemas/FieldValues'
        watchers:
          type: array
          description: When the issue information changes, watchers will be notified by email, etc.
          items:
            maxLength: 8
            minLength: 1
            type: string
        parentID:
          maxLength: 16
          minLength: 1
          type: string
          description: Parent issue ID.
      example:
        assignee: 5f1b8a1b
        title: test
        projectID: 5f1b8a1b1d1b2b24
        issueTypeID: 9c6d4c01
        fieldValues:
          - fieldID: b8a1b9c6
            value:
              name: test
        watchers:
          - 5f1b8a1b9c6d4c0001d1b2b2
    UpdateIssueRequest:
      type: object
      properties:
        assignee:
          maxLength: 8
          minLength: 1
          type: string
          description: Issue assignee.
        title:
          maxLength: 1024
          minLength: 1
          type: string
          description: Issue title.
        fieldValues:
          type: array
          description: Issue Property Information.
          items:
            $ref: '#/components/schemas/FieldValues'
      example:
        assignee: 5f1b8a1b
        title: test
        fieldValues:
          - fieldID: b8a1b9c6
            value: test
    FieldValues:
      required:
        - fieldID
        - value
      type: object
      properties:
        fieldID:
          description: ID of the field.
          minLength: 8
          type: string
        value:
          type: object
          properties: {}
          description: Value of the field.
    DeleteSuccessResponse:
      type: object
      properties:
        $ref: ../../../../../openapi-common/canary/en/200-response-schemas.yaml
      example:
        - result: SUCCESS
        - result: FAIL
          errorCode: NotFound
          errorMsg: 'NotFound issue'
    AddSuccessResponse:
      type: object
      properties:
        $ref: ../../../../../openapi-common/canary/en/200-response-schemas.yaml
        data:
          type: object
          properties:
            id:
              type: string
              description: ID of the issue.
            number:
              type: integer
              description: Number of the issue.
            title:
              type: string
              description: Title of the issue.
            projectID:
              type: string
              description: Project of the issue.
            issueTypeID:
              type: string
              description: Type of the issue.
            parentID:
              type: string
              description: Parent issue ID.
      example:
        - result: SUCCESS
          data:
            id: 5f1b8a16
            number: 1
            title: test
            projectID: 5f1b8a158765h
            issueTypeID: 9c6d4c01
            parentID: 7f1b8a18
        - result: FAIL
          errorCode: NotFound
          errorMsg: 'NotFound issue'
        - result: FAIL
          errorCode: AlreadyExists
          errorMsg: 'AlreadyExists issue'
        - result: FAIL
          errorCode: NotFound
          errorMsg: 'NotFound parentIssue'
    UpdateSuccessResponse:
      type: object
      properties:
        $ref: ../../../../../openapi-common/canary/en/200-response-schemas.yaml
        data:
          type: object
          properties:
            id:
              type: string
              description: ID of the issue.
            number:
              type: integer
              description: Number of the issue.
            title:
              type: string
              description: Title of the issue.
            projectID:
              type: string
              description: Project of the issue.
            issueTypeID:
              type: string
              description: Type of the issue.
            parentID:
              type: string
              description: Parent issue ID.
      example:
        - result: SUCCESS
          data:
            id: 5f1b8a16
            number: 1
            title: test
            projectID: 5f1b8a158765h
            issueTypeID: 9c6d4c01
            parentID: 7f1b8a18
        - result: FAIL
          errorCode: NotFound
          errorMsg: 'NotFound issue'
    ListItem:
      type: object
      properties:
        assignee:
          type: object
          properties:
            id:
              type: string
              description: ID of the assignee.
            name:
              type: string
              description: Name of the assignee.
        createTime:
          type: integer
          description: CreateTime of the issue.
        dueDate:
          type: string
          description: Issue due date.
        timeEstimatedHour:
          type: integer
          description: Time estimated,unit is hour.
        issueType:
          type: object
          properties:
            id:
              type: string
              description: ID of the issue type.
            name:
              type: string
              description: Name of the issue type.
        title:
          type: string
          description: Title of the issue.
        number:
          type: integer
          description: Number of the issue.
        creator:
          type: object
          properties:
            id:
              type: string
              description: ID of the creator.
            name:
              type: string
              description: Name of the creator.
        parent:
          type: object
          properties:
            id:
              type: string
              description: Parent issue ID.
            title:
              type: string
              description: Parent issue title.
        priority:
          type: object
          properties:
            id:
              type: string
              description: ID of the priority.
            name:
              type: string
              description: Name of the priority.
        project:
          type: object
          properties:
            id:
              type: string
              description: Project ID of the issue.
            name:
              type: string
              description: Project name of the issue.
        timeRemainingHour:
          type: integer
          description: Time remaining,unit is hour.
        sprint:
          type: object
          properties:
            id:
              type: string
              description: ID of the sprint.
            name:
              type: string
              description: Name of the sprint.
        status:
          type: object
          properties:
            id:
              type: string
              description: ID of the status.
            name:
              type: string
              description: Name of the status.
            category:
              type: string
              description: Category of the status.
        subIssueType:
          type: object
          properties:
            id:
              type: string
              description: ID of the sub issue type.
            name:
              type: string
              description: Name of the sub issue type.
        subIssueCount:
          type: integer
          description: Total sub issue.
        subIssueDoneCount:
          type: integer
          description: Total completed sub issue.
        subIssues:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                description: ID of the sub issue.
              name:
                type: string
                description: Name of the sub issue.
        totalTimeEstimatedHour:
          type: integer
          description: Total time estimated,unit is hour.
        timeSpentHour:
          type: integer
          description: Time spent,unit is hour.
        totalTimeRemainingHour:
          type: integer
          description: Total time remaining,unit is hour.
        id:
          type: string
          description: ID of the issue.
        attachments:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                description: ID of the attachment.
              name:
                type: string
                description: Name of the attachment.
              createTime:
                type: integer
                description: Create time of the attachment.
    ListSuccessResponse:
      type: object
      properties:
        $ref: ../../../../../openapi-common/canary/en/200-response-schemas.yaml
        data:
          type: object
          properties:
            list:
              type: array
              items:
                $ref: '#/components/schemas/ListItem'
            $ref: ../../../../../openapi-common/canary/en/paging-query-response-pageInfo-schemas.yaml
      example:
        - result: SUCCESS
          data:
            list:
              - assignee:
                  id: 5f1b8a1b
                  name: test
                createTime: 1595555555
                dueDate: 1595555555
                timeEstimatedHour: 1
                issueType:
                  id: 9c6d4c01
                  name: test
                title: test
                number: 1
                creator:
                  id: 5f1b8a1b
                  name: test
                parent:
                  id: 5f1b8a1b
                  title: test
                priority:
                  id: 9c6d4c01
                  name: test
                project:
                  id: 5f1b8a1b
                  name: test
                timeRemainingHour: 1
                sprint:
                  id: 5f1b8a1b
                  name: test
                status:
                  id: 5f1b8a1b
                  name: test
                  category: test
                subIssueType:
                  id: 5f1b8a1b
                  name: test
                subIssueCount: 1
                subIssueDoneCount: 1
                subIssues:
                  - id: 5f1b8a1b
                    name: test
                totalTimeEstimatedHour: 1
                timeSpentHour: 1
                totalTimeRemainingHour: 1
                id: 5f1b8a1b
                attachments:
                  - id: 5f1b8a1b
                    name: test
                    createTime: 1595555555
            pageInfo:
              count: 1
              endCursor: 'sample_end_cursor'
              hasNextPage: false
              startCursor: 'sample_start_cursor'
              totalCount: 1
    $ref: ../../../../../openapi-common/canary/en/no-200-response-schemas.yaml
  securitySchemes:
    oauth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://your-domain/oauth2/authorize
          tokenUrl: https://your-domain/oauth2/token
          scopes:
            write:project:issue: Add, edit, delete issue
            read:project:issue: Access issue information
