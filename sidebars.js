/* eslint-disable @typescript-eslint/no-var-requires */
/**
 * Creating a sidebar enables you to:
 - create an ordered group of docs
 - render a sidebar for each doc of that group
 - provide next/previous navigation

 The sidebars can be generated from the filesystem, or explicitly defined here.

 Create as many sidebars as you want.
 */

// @ts-check

const mustache = require('mustache')
const { versionCrumb } = require('docusaurus-plugin-openapi-docs/lib/sidebars/utils')

const OpenAPIVersions = [
  // {
  //   version: 'v1',
  //   label: 'v1',
  //   path: 'openapi-v1',
  // },
  {
    version: 'Latest',
    label: 'Latest',
    path: 'openapi',
  },
]

// 含多语和版本标识的 baseUrl 正则
const baseUrlRE = /(\/.*?\/docs\/(.*?\..*?\/)?)/

function generateVersionSelectorConfig(currentLabel) {
  if (Object.values(OpenAPIVersions).length <= 1) return []
  /** @type {import('@docusaurus/plugin-content-docs').SidebarsConfig[string]} */
  const config = [
    {
      type: 'html',

      defaultStyle: true,
      value: versionSelector(
        Object.values(OpenAPIVersions).map(({ version, path, label }) => ({
          version,
          label,
          path,
        })),
        baseUrlRE,
      ),
      className: 'openapi-version-button',
    },
    {
      type: 'html',
      defaultStyle: true,
      value: versionCrumb(currentLabel),
    },
  ]
  return config
}

/** @type {import('@docusaurus/plugin-content-docs').SidebarsConfig} */
const sidebars = {
  // By default, Docusaurus generates a sidebar from the docs folder structure
  guide: [{ type: 'autogenerated', dirName: 'guide' }],
  abilities: [{ type: 'autogenerated', dirName: 'abilities' }],
  reference: [{ type: 'autogenerated', dirName: 'reference' }],
  tools: [{ type: 'autogenerated', dirName: 'tools' }],
  internal: [{ type: 'autogenerated', dirName: 'internal' }],
  api: [{ type: 'autogenerated', dirName: 'api' }],
  faq: [{ type: 'autogenerated', dirName: 'faq' }],

  ...Object.values(OpenAPIVersions).reduce((acc, { path, label }) => {
    acc[path] = [...generateVersionSelectorConfig(label), { type: 'autogenerated', dirName: path }]
    return acc
  }, {}),

  // But you can create a sidebar manually
  /*
  tutorialSidebar: [
    {
      type: 'category',
      label: 'Tutorial',
      items: ['hello'],
    },
  ],
   */
}

/**
 * @param {*} baseUrlRE baseUrl 正则
 * 解决中文下会跳转到英文的问题
 * 例如：http://localhost:4000/zh-CN/docs/2.x/openapi
 * 匹配获取第一项：http://localhost:4000/zh-CN/docs/2.x/
 * 拼接后：http://localhost:4000/zh-CN/docs/2.x/${path}
 */
function versionSelector(versions, baseUrlRE) {
  const template = `<div class="dropdown dropdown--hoverable dropdown--right">
<button class="button button--block button--sm button--secondary"><span>Select API Version</span></button>
<ul class="dropdown__menu">
  {{#.}}<li><a class="dropdown__link" onclick="location.href=location.href.match(${baseUrlRE})[0]+'{{{path}}}'" >{{{label}}}</a></li>{{/.}}
</ul>
</div>
    `
  const view = mustache.render(template, versions)
  return view
}

module.exports = sidebars
