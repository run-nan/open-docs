openapi: 3.0.1
info:
  title: Auth
  version: '1.0'
  description: |
    The ONES REST API utilizes the standard OAuth 2.0 authorization mechanism to provide secure user authorization and access tokens for third-party applications to access protected resources. OAuth 2.0 enables third-party applications to obtain limited and revocable access privileges in a secure and controlled manner, without directly using user credentials. This authorization mechanism offers a flexible and reliable way for third-party applications to securely interact with the ONES system and obtain the necessary resource access permissions.
servers:
  - url: https://your-domain
  - url: http://your-domain
paths:
  /oauth2/authorize:
    get:
      summary: Apply for authorization code
      operationId: apply-for-authorization-code
      description: Apply for authorization code.
      parameters:
        - name: client_id
          required: true
          in: query
          description: Client ID obtained from creating an OAuth application.
          schema:
            type: string
        - name: response_type
          required: true
          in: query
          description: Fixed value:code.
          schema:
            type: string
        - name: redirect_uri
          in: query
          description: The Redirect URI configured when creating the OAuth application, to which the user will be redirected with the authorization code after granting consent.
          schema:
            type: string
        - name: scope
          in: query
          description: A comma-separated list of scopes, which must be a subset of the scopes configured when creating the OAuth application. By default, the scopes configured when creating the OAuth application are used.
          schema:
            type: string
        - name: state
          in: query
          description: A random string that the client uses to maintain state between the request and callback, which will ultimately be returned as is.
          schema:
            type: string
      responses:
        302:
          description: Redirect to the Redirect URI, and add the code and state parameters to the URL parameters.
  /oauth2/token:
    post:
      summary: Apply for or refresh access token
      operationId: apply-for-or-refresh-access-token
      description: Apply for or refresh access token.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                client_id:
                  type: string
                  description: The Client ID obtained from creating an OAuth application, which needs to be assigned when applying for or refreshing an access token.
                client_secret:
                  type: string
                  description: The Client Secret obtained from creating an OAuth application, which needs to be assigned when applying for an access token.
                code:
                  type: string
                  description: Authorization code, which needs to be assigned when applying for an access token.
                redirect_uri:
                  type: string
                  description: The Redirect URI configured when creating an OAuth application. It is not mandatory, but can be assigned when applying for an access token.
                grant_type:
                  type: string
                  enum: [authorization_code, refresh_token]
                  description: authorization_code,chosen when requesting an access token. refresh_token,chosen when refreshing an access token.
                refresh_token:
                  type: string
                  description: Refresh token, which needs to be assigned when refreshing an access token.
      responses:
        200:
          description: Request successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplyTokenSuccessResponse'
        400:
          description: Invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadResponse'
        401:
          description: If the authentication credentials are incorrect or missing, it will return.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadResponse'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadResponse'
  /oauth2/introspect:
    get:
      summary: Get access token details
      operationId: get-access-token-details
      description: Get access token details.
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            description: Access token.
      responses:
        200:
          description: Request successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessTokenResponse'
  /oauth2/revoke:
    post:
      summary: Revoke access token
      operationId: revoke-access-token
      description: Revoke access token.
      requestBody:
        content:
          application/json:
            schema:
              required:
                - client_id
                - client_secret
                - access_token
              type: object
              properties:
                client_id:
                  type: string
                  description: The "Client ID" obtained from creating an OAuth application.
                client_secret:
                  type: string
                  description: The "Client Secret" obtained from creating an OAuth application.
                access_token:
                  type: string
                  description: Access token.
      responses:
        200:
          description: Request successful.
components:
  schemas:
    ApplyTokenSuccessResponse:
      type: object
      properties:
        access_token:
          type: string
          description: The "Access token" (valid for 1 day).
        refresh_token:
          type: string
          description: The "Refresh token" used to refresh the access token (valid for 30 days).
        expires_in:
          type: integer
          description: The expiration time of the access token, measured in seconds.
        scope:
          type: string
          description: The Open API scopes that the OAuth application can access, separated by commas.
        token_type:
          type: string
          description: The type of access token.
        user_id:
          type: string
          description: The bot ID of the access token.
        email:
          type: string
          description: The bot email of the access token.
    AccessTokenResponse:
      type: object
      properties:
        active:
          type: boolean
          description: Whether the access token is valid/usable.
        sub:
          type: string
          description: The bot ID of the access token.
        scope:
          type: string
          description: The Open API scopes that are accessible, separated by commas.
        client_id:
          type: string
          description: The identifier of the OAuth application.
        token_type:
          type: string
          description: The type of access token.
        exp:
          type: integer
          description: The expiration time of the access token.
        team_id:
          type: string
          description: The team ID of the created OAuth application.
    BadResponse:
      type: object
      properties:
        error:
          type: string
          description: The error message for the current request.
        error_description:
          type: string
          description: The detailed error information for the current request.
