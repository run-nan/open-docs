# 自动合并canary内容
name: AutoMergeCanary
on:
  pull_request:
    branches:
      - main
    paths:
      - 'docs/**'
      - 'i18n/zh-CN/docusaurus-plugin-content-docs/current/**'
jobs:
  labelchecker:
    runs-on: ubuntu-latest
    steps:
      - name: Get pull request labels
        id: pr-labels
        uses: joerick/pr-labels-action@v1.0.6

      - name: Check the label
        if: "!contains(steps.pr-labels.outputs.labels, ' canary ')"
        run: |
            only deal with canary label
            exit 1
  pathchecker:
    needs: labelchecker
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: MikeCxx/paths-filter-strict@v1.0.8
      id: filter
      with:
        filters: |
          canary:
            - 'docs/**'
            - 'i18n/zh-CN/docusaurus-plugin-content-docs/current/**'
    - name: Check if only the canary has been changed
      if: steps.filter.outputs.canary == 'false'
      run: |
          found the unnecessary files changes in the pull request
          exit 1
  mergepullrequest:
    needs: pathchecker
    runs-on: ubuntu-latest
    env:
      pr_number: ${{ format('{0}', github.event.pull_request.number) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Approval pull request
        uses: pwei1018/bcrs-ci-action@v1.0.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          pr-approval: true
          pr-message: "auto merge for canary"

      - name: Merge pull request
        id: automerge
        uses: pascalgn/automerge-action@v0.15.5
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          MERGE_LABELS: "canary"
          MERGE_METHOD: "squash"
          MERGE_COMMIT_MESSAGE: pull-request-title

      - name: Fail result
        if: steps.automerge.outputs.mergeResult != 'merged'
        run: |
          merge failed: ${{ steps.automerge.outputs.mergeResult }}
          exit 1
  deploy:
    needs: mergepullrequest
    timeout-minutes: 30
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          ref: main

      - name: setup Node.js v16
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}

      - name: install dependencies
        run: npm ci

        # npm ci 会清空 node_modules，所以缓存需要在 npm ci 之后才运行
      - name: cache node_modules/.cache
        uses: actions/cache@v3
        with:
          key: ${{ hashFiles('package-lock.json') }}-${{ github.run_id }}
          path: node_modules/.cache
          restore-keys: ${{ hashFiles('package-lock.json') }}-
      - run: npm run build
      - uses: appleboy/scp-action@v0.1.2
        with:
          host: 120.78.193.246
          username: lanjin
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: ./dist/*
          target: /usr/share/nginx/docs
          strip_components: 1
          rm: true

      - name: send notification
        run: >
          curl 'https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=20dc3e3c-dfa4-4d10-8900-292810e5b046' -H 'Content-Type: application/json' -d '{
            "msgtype": "template_card",
            "template_card": {
              "card_type": "text_notice",
              "card_action": {
                "type": 1,
                "url": "https://docs.partner.ones.cn/"
              },
              "source": {
                "desc": "开放平台在线文档"
              },
              "main_title": {
                "title": "🦋 发布成功"
              },
              "horizontal_content_list": [
                {
                  "keyname": "用户名",
                  "value": "ones"
                },
                {
                  "keyname": "密码",
                  "value": "onesopen"
                }
              ]
            }
          }'